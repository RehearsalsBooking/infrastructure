server {
    listen 80;

    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443;

    server_name festic.ru;
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 302 https://app.festic.ru/$request_uri;
    }
}

server {
    listen 443 ssl;

    server_name app.festic.ru demo.festic.ru;

    client_max_body_size 50m;
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";
    charset utf-8;

    ssl_certificate /etc/letsencrypt/live/festic.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/festic.ru/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        root   /usr/share/nginx/html/frontend;
        index  index.html;
        try_files $uri $uri/ /index.html;
    }
    location ~ ^/(api|storage)/ {
        proxy_pass http://nginx:81;
        proxy_http_version 1.1;
    }


    location ~ /\.(?!well-known).* {
        deny all;
    }
}
server {
    listen 81;

    client_max_body_size 50m;
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";
    charset utf-8;
    root /app/public;

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }
    location /api {
        rewrite ^/api/(.*)$ /$1 break;
        proxy_pass http://nginx:81/;
    }
    location ~ \.php$ {
        fastcgi_pass backend:9000;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        include fastcgi_params;
    }

    location ~ /\.(?!well-known).* {
        deny all;
    }
}
server {
    listen 82;

    client_max_body_size 50m;
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";
    charset utf-8;
    root /app/public;

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }
    location /api {
        rewrite ^/api/(.*)$ /$1 break;
        proxy_pass http://nginx:82/;
    }
    location ~ \.php$ {
        fastcgi_pass backend:9001;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        include fastcgi_params;
    }

    location ~ /\.(?!well-known).* {
        deny all;
    }
}