version: '3.5'


services:
    caddy:
        image: caddy:2-alpine
        restart: unless-stopped
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./config/caddy/Caddyfile:/etc/caddy/Caddyfile
            - ./data/caddy/data:/data
            - ./data/caddy/config:/config
            - backend-volume:/app
            - backend-demo-volume:/app-demo
            - ./data/storage/:/app/storage/
        depends_on:
            - backend
            - frontend
    backend:
        hostname: backend
        image: docker.pkg.github.com/rehearsalsbooking/backend/backend:production
        restart: unless-stopped
        volumes:
            - .env.backend:/app/.env
            - backend-volume:/app
            - ./data/storage/:/app/storage/
        depends_on:
            - db

    backend-demo:
        hostname: backend-demo
        image: docker.pkg.github.com/rehearsalsbooking/backend/backend:demo
        restart: unless-stopped
        volumes:
            - .env.backend-demo:/app-demo/.env
            - backend-demo-volume:/app-demo
        depends_on:
            - db

    landing:
        image: ghcr.io/rehearsalsbooking/landing/landing:latest

    frontend:
        image: docker.pkg.github.com/rehearsalsbooking/frontend/frontend:production

    frontend-demo:
        image: docker.pkg.github.com/rehearsalsbooking/frontend/frontend:demo

    db:
        image: postgres:alpine
        ports:
            - "5432:5432"
        env_file:
            - .env
        volumes:
            - ./data/postgres:/var/lib/postgresql/data

    db-demo:
        ports:
            - "5433:5432"
        image: postgres:alpine
        env_file:
            - .env

volumes:
    backend-volume:
    backend-demo-volume:
