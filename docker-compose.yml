version: '3.5'


services:
  frontend:
    image: docker.pkg.github.com/rehearsalsbooking/frontend/frontend:production
    volumes:
      - frontend-volume:/frontend

  backend:
    hostname: backend
    image: docker.pkg.github.com/rehearsalsbooking/backend/backend:production
    restart: unless-stopped
    volumes:
      - .env.backend:/app/.env
      - ./data/storage/:/app/storage/
      - backend-volume:/app
    depends_on:
      - db

  backend-demo:
    hostname: backend-demoo
    image: docker.pkg.github.com/rehearsalsbooking/backend/backend:production
    restart: unless-stopped
    volumes:
      - .env.backend.demo:/app/.env
      - ./data/demo-storage/:/app/storage/
      - backend-demo-volume:/app
    depends_on:
      - db

  db:
    image: postgres:alpine
    env_file:
      - .env
    volumes:
      - ./data/postgres:/var/lib/postgresql/data

  db-demo:
    image: postgres:alpine
    env_file:
      - .env
    volumes:
      - ./data/postgres-demo:/var/lib/postgresql/data
    ports:
      - "5432:5433"

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "81:81"
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    restart: unless-stopped
    volumes:
      - frontend-volume:/usr/share/nginx/html/frontend
      - backend-volume:/app
      - ./data/storage/:/app/storage/
      - ./config/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./data/nginx/:/var/log/nginx
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - frontend
      - backend
      - backend-demo
      - db
      - db-demo

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  frontend-volume:
  backend-volume:
  backend-demo-volume: