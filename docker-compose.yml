version: '3.5'


services:
    traefik:
        image: traefik:v2.5
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./letsencrypt:/letsencrypt
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - ./traefik.yml:/traefik.yml:ro
        labels:
            - traefik.enable=true
            - traefik.http.routers.traefik.entrypoints=http
            - traefik.http.routers.traefik.rule=Host(`traefik.festic.ru`)
            - traefik.http.middlewares.traefik-auth.basicauth.users=${AUTH_USER}:${AUTH_PASSWORD}
            - traefik.http.routers.traefik-secure.entrypoints=https
            - traefik.http.routers.traefik-secure.rule=Host(`traefik.festic.ru`)
            - traefik.http.routers.traefik-secure.middlewares=traefik-auth
            - traefik.http.routers.traefik-secure.tls=true
            - traefik.http.routers.traefik-secure.tls.certresolver=digital-ocean
            - traefik.http.routers.traefik-secure.tls.domains[0].main=festic.ru
            - traefik.http.routers.traefik-secure.tls.domains[0].sans=*.festic.ru
            - traefik.http.routers.traefik-secure.service=api@internal
        environment:
            - DO_AUTH_TOKEN

    nginx:
        image: nginx:alpine
        volumes:
            - backend-volume:/app
            - ./config/nginx/default.conf:/etc/nginx/conf.d/default.conf
            - ./data/nginx/:/var/log/nginx
        depends_on:
            - backend
        labels:
            - traefik.enable=true
            - traefik.http.routers.nginx.rule=Host(`api.festic.ru`)
            - traefik.http.routers.nginx.entrypoints=https
            - traefik.http.routers.nginx.tls.certresolver=digital-ocean

    backend:
        hostname: backend
        image: docker.pkg.github.com/rehearsalsbooking/backend/backend:production
        restart: unless-stopped
        volumes:
            - .env.backend:/app/.env
            -  backend-volume:/app
        depends_on:
            - db

    frontend:
        image: docker.pkg.github.com/rehearsalsbooking/frontend/frontend:production
        volumes:
            - frontend-volume:/frontend
        labels:
            - traefik.enable=true
            - traefik.http.routers.frontend.rule=Host(`festic.ru`)
            - traefik.http.routers.frontend.entrypoints=https
            - traefik.http.routers.frontend.tls.certresolver=digital-ocean

    db:
        image: postgres:alpine
        env_file:
            - .env
        volumes:
            - ./data/postgres:/var/lib/postgresql/data

volumes:
    frontend-volume:
    backend-volume:
